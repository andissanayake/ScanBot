services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: src/Api/Dockerfile
    ports:
      - "1001:8080"
      - "1002:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - SQL_SERVER=sqlserver
      - SQL_USER=sa
      - SQL_PASSWORD=YourStrong!Passw0rd
    depends_on:
      - postgres
    volumes:
      - shared-data:/app/wwwroot/Documents
  # web:
  #   build:
  #     context: src/web
  #   ports:
  #     - "1000:1000"
  #   environment:
  #     CHOKIDAR_USEPOLLING: "true" # Ensure file changes are detected inside the container
  #     CHOKIDAR_INTERVAL: "1000"   # Optional: Adjust polling interval
  web:
    build: 
        context: src/web
    ports:
      - "1000:1000"
    volumes:
      - .:/web
    command: npm run dev
  # sqlserver:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: sqlserver
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=YourStrong!Passw0rd
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - sql_data:/var/opt/mssql
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # RabbitMQ default port
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: UnifiedAppDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YourStrong!Passw0rd
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  sql_data:
  rabbitmq-data: 
  postgres_data:
  shared-data:  